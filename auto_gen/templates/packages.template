/*
本文件自动生成，请勿手工修改
generated@{datetime}
Version={version}
*/

#ifndef {version}_PACKAGES_H
#define {version}_PACKAGES_H

#include "../ID.h"
#include "../Declare.h"
#include "../FtdMessageUtil.h"

{include_file_headers}

namespace FTD
{{

DECLARE_SPTR(Package);
DECLARE_PTR(Package);

{declare_smart_ptr_lines}

struct PackageBuffer
{{
	PackageBuffer()
	{{
	}}

	Package* OnFtdMessage(const std::string& ftdMessage)
	{{
		return OnFtdcMessage(FtdMessageUtil::parseFtdMessage(ftdMessage));
	}}

	
	Package* OnFtdcMessage(const std::string& message)
	{{
		Package* newArrivedPackage = 0;
		FtdcHeader header;
		readFtdcHeader(message.c_str(), header);

		switch(header.transactionId)
		{{
{read_cases}
			default:
			{{
				break;
			}}
		}}
		return newArrivedPackage;
	}}

	private:
	PackageBuffer (const PackageBuffer&) = delete;
	PackageBuffer& operator=(const PackageBuffer&) = delete;
	
{package_members}
}};

	
}}
#endif