/*
本文件自动生成，请勿手工修改
Version={version}
*/

#ifndef {version}_PACKAGES_H
#define {version}_PACKAGES_H

#include "../ID.h"
#include "../Declare.h"
#include "../FtdMessageUtil.h"

{include_file_headers}

namespace FTD
{{

DECLARE_SPTR(Package);
DECLARE_PTR(Package);

{declare_smart_ptr_lines}

struct PackageBuffer
{{
    bool m_isReceiveReq;
	PackageBuffer(bool isReceiveReq) : m_isReceiveReq(isReceiveReq)
	{{
	}}
{package_members}

	

	int readFtdcMessage(const std::string& message)
	{{
		FtdcHeader header;
		readFtdcHeader(message.c_str(), header);

		int readResult = -1;
		switch(header.transactionId)
		{{
{read_cases}
			default:
			{{
				break;
			}}
		}}
		return readResult;
	}}

	Package* retrievePackage(int transactionId)
	{{
		Package* retrieveResult = nullptr;
		switch(transactionId)
		{{
{retrieve_cases}
            default:
			{{
				break;
			}}
		}}
		return retrieveResult;
	}}

	Package* OnFtdMessage(const std::string& message)
	{{
		return OnFtdcMessage(FtdMessageUtil::parseFtdMessage(message));
	}}

	///deprecating?
	Package* OnFtdcMessage(const std::string& message)
	{{
		int transactionId = readFtdcMessage(message);
		return retrievePackage(transactionId);
	}}
}};

	
}}
#endif